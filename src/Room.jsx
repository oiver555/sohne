/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 C:\Users\osain\Coding\Projects\3js\Sohne\public\gltf\Room.glb -o C:\Users\osain\Coding\Projects\3js\Sohne\src\Room.jsx 
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";

export function Room(props) {
  const [wall, ceiling, floor, trims] = useTexture([
    "/textures/livingroom/Living_Room_3_Shaded__Walls_WallsShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_3_Shaded__Ceiling_CeilingShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_3_Shaded__Floor_FloorShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_3_Shaded__Trims_TrimsShape_rmanDefaultBakeDisplay.png",
  ]);

  wall.flipY = false
  ceiling.flipY = false
  floor.flipY = false
  trims.flipY = false

  const wallMat = new THREE.MeshStandardMaterial({
    map: wall,
    envMapIntensity:0

  });

  const ceilingMat = new THREE.MeshStandardMaterial({
    map: ceiling,
    envMapIntensity:0

  });

  const floorMat = new THREE.MeshStandardMaterial({
    map: floor,
    envMapIntensity:0

  });

  const trimsMat = new THREE.MeshStandardMaterial({
    map: trims,
    envMapIntensity:0

  });
  const { nodes, materials } = useGLTF("./gltf/Room.glb");
  return (
    <group {...props} dispose={null}>
    <mesh geometry={nodes.Walls.geometry} material={wallMat} />
    <mesh geometry={nodes.Ceiling.geometry} material={ceilingMat} />
    <mesh geometry={nodes.Floor.geometry} material={floorMat} />
    <mesh geometry={nodes.Trims.geometry} material={trimsMat} />
  </group>
  );
}

// useGLTF.preload("./gltf/Room.glb");
