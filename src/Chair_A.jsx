/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

export default function Chair_A_1(props) {
  const { nodes } = useGLTF("./gltf/Chair_A.glb");
  const objRef = useRef();

  const textureLoader = new THREE.TextureLoader();
  const wood_rough = textureLoader.load("/textures/dark_wood_rough_2k.jpg");
  const Chair_A_AO = textureLoader.load("/textures/Chair_A.png");
  Chair_A_AO.flipY = false;

  const wood = textureLoader.load("./textures/dark_wood_diff_2k.jpg");
  const wood_norm = textureLoader.load("./textures/dark_wood_nor_gl_2k.jpg");
  wood.wrapS = THREE.RepeatWrapping;
  wood.wrapT = THREE.RepeatWrapping;
  wood.repeat.set(10, 10);
  wood.flipY = true;
  wood_norm.wrapS = THREE.RepeatWrapping;
  wood_norm.wrapT = THREE.RepeatWrapping;
  wood_norm.repeat.set(10, 10);
  wood_norm.flipY = true;
  wood_rough.wrapS = THREE.RepeatWrapping;
  wood_rough.wrapT = THREE.RepeatWrapping;
  wood_rough.repeat.set(10, 10);
  wood_rough.flipY = true;

  useFrame(() => {
    objRef.current.rotation.y += 0.005;
  });

  const woodMat1 = new THREE.MeshStandardMaterial({
    map: wood,
    aoMap: Chair_A_AO,
    aoMapIntensity: 1,
    normalMap: wood_norm,
    roughnessMap: wood_rough,
    roughness: 0.9,
    colorWrite: true,
    dithering: true,
    flatShading: true,
    fog: true,
    normalScale: new THREE.Vector2(0.8, 0.8),
    envMapIntensity: 0.2,
  });

  return (
    <group
      castShadow
      ref={objRef}
      name="Chair_A_grp"
      position={[20, -0.2, 14]}
      rotation={[0, 31.6, 0]}
      scale={0.056}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chair_APIV.geometry}
        material={woodMat1}
        position={[-1.118, 0, -1.352]}
      />
    </group>
  );
}

useGLTF.preload("gltf/Chair_A.glb");
