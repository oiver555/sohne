/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from "three";

export default function Table_C(props) {
  const { nodes, materials } = useGLTF("./gltf/Table_C.glb");
 
  const [plywooddiff2k,
    plywoodnorgl2k,
    plywoodrough2k] = useTexture([
      "./textures/plywood_diff_2k.jpg",
      "./textures/plywood_nor_gl_2k.jpg",
      "./textures/plywood_rough_2k.jpg",
  ]);

 

  const plyMaterial = new THREE.MeshPhysicalMaterial({
    // color:plywooddiff2k, // Base color of the steel
    map: plywooddiff2k,
    // metalness: 0.4, // Fully metallic
    // metalnessMap: MetalSteelBrushed001metallic,
    normalScale: new THREE.Vector2(2, 2),
    normalMap: plywoodnorgl2k,
    roughnessMap: plywoodrough2k,
    roughness: 0.8, // Adjust the roughness for a brushed appearance
    side: THREE.DoubleSide,
    envMapIntensity:.2,
  });


  return (
    <group
    visible={false}
    name="Table_C_grp"
    position={[19, 0, 13]}
    scale={0.067}
  >
    <group name="Table_C_Body" position={[0.017, 35.7, 0.018]}>
      <mesh
        name="Table_C_BodyPIV"
        castShadow
        receiveShadow
        geometry={nodes.Table_C_BodyPIV.geometry}
        material={plyMaterial}
        position={[-0.017, -35.7, -0.018]}
      />
    </group>
    <mesh
      name="Table_C_Stand"
      castShadow
      receiveShadow
      geometry={nodes.Table_C_Stand.geometry}
      material={plyMaterial}
      position={[0, -2.65, 0]}
      rotation={[-Math.PI / 2, 0, 0]}
      scale={100}
    />
    <mesh
      name="Table_C_Top"
      castShadow
      receiveShadow
      geometry={nodes.Table_C_Top.geometry}
      material={plyMaterial}
      position={[0, -2.65, 0]}
      rotation={[-Math.PI / 2, 0, 0]}
      scale={100}
    />
  </group>
  );
}

useGLTF.preload("gltf/Table_C.glb");
