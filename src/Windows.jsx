/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";

export function Windows(props) {
  const { nodes, materials } = useGLTF("./gltf/Window.glb");
  const [window] = useTexture([
    "/textures/livingroom/Living_Room_2_Shaded__Window_WindowShape_rmanDefaultBakeDisplay.png",
   ]);

  window.flipY = false;
 
  const windowMat = new THREE.MeshStandardMaterial({
    lightMap: window,
    envMapIntensity: .1,
    color: "white"
  });
  const glassMAt = new THREE.MeshPhysicalMaterial({
 
    color: 0xffffff, // Color of the glass
        // Opacity (transparency) of the glass (0 = fully transparent, 1 = fully opaque)
    transparent: true, // Enable transparency
    metalness: 0,     // Metalness of the material (0 for non-metallic surfaces)
    roughness:.2,   // Roughness of the material (0 for perfectly smooth)
    
    transmission: 1,
    
    
  });

  return (
    <group {...props} dispose={null}>
      <group position={[-130.535, 142.758, 34.605]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Window_GlassPIV.geometry}
          material={glassMAt}
          position={[130.535, -142.758, -34.605]}
        />
      </group>
      <group position={[74.645, 129.131, -1.352]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.WindowPIV.geometry}
          material={windowMat}
          position={[-74.645, -129.131, 1.352]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("./gltf/Window.glb");
