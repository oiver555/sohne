/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { useFrame } from "@react-three/fiber";

export default function Sofa_C(props) {
  const textureLoader = new THREE.TextureLoader();

  const PlaidFabricBump = textureLoader.load("/textures/Plaid_Fabric_Bump.jpg");
  const PlaidFabricDiffuse = textureLoader.load(
    "/textures/Plaid_Fabric_Diffuse.jpg"
  );
  const ArmchairLeatheVelvetNRM = textureLoader.load(
    "/textures/Armchair_Leathe_Velvet_NRM.jpg"
  );

  const ArmchairLeatheVelvetMask = textureLoader.load(
    "/textures/Armchair_Leathe_Velvet_Mask.jpg"
  );
  const ArmchairLeatheVelvetMask01 = textureLoader.load(
    "/textures/Armchair_Leathe_Velvet_Mask_01.jpg"
  );
  const ArmchairLeatheMetalDirty = textureLoader.load(
    "/textures/Armchair_Leathe_Metal_Dirty.jpg"
  );
  ArmchairLeatheMetalDirty.wrapS = THREE.RepeatWrapping;
  ArmchairLeatheMetalDirty.wrapT = THREE.RepeatWrapping;
  ArmchairLeatheMetalDirty.repeat.set(2, 2);
  const blanketMtl = new THREE.MeshStandardMaterial({
    map: PlaidFabricDiffuse,
    bumpMap: PlaidFabricBump,
  });

  const pillowMtl1 = new THREE.MeshPhysicalMaterial({
    color: new THREE.Color(0, 0.5, 1),
    normalMap: ArmchairLeatheVelvetNRM,
    normalMapType: THREE.TangentSpaceNormalMap,
    normalScale: new THREE.Vector2(0.2, 0.2),
    sheen: 0.6,

    sheenColor: new THREE.Color(0, 0.5, 1),
    attenuationColor: new THREE.Color(1, 0, 0),
    attenuationDistance: 10,
    sheenRoughnessMap: ArmchairLeatheVelvetMask,
    metalness: 0.8,
    metalnessMap: ArmchairLeatheVelvetMask,
  });

  const pillowMtl2 = new THREE.MeshPhysicalMaterial({
    color: new THREE.Color(0.1, 0.8, 0.4),
    normalMap: ArmchairLeatheVelvetNRM,
    normalMapType: THREE.TangentSpaceNormalMap,
    normalScale: new THREE.Vector2(0.2, 0.2),
    sheen: 0.6,

    sheenColor: new THREE.Color(0, 0.5, 1),
    attenuationColor: new THREE.Color(1, 0, 0),
    attenuationDistance: 10,
    sheenRoughnessMap: ArmchairLeatheVelvetMask01,
    metalness: 0.8,
    metalnessMap: ArmchairLeatheVelvetMask01,
  });

  const sofaMtl = new THREE.MeshPhysicalMaterial({
    color: new THREE.Color(0.4, 0.4, 0.4),
    normalMap: ArmchairLeatheVelvetNRM,
    normalMapType: THREE.TangentSpaceNormalMap,
    normalScale: new THREE.Vector2(0.4, 0.4),
    sheen: 0.2,
    sheenColor: new THREE.Color(1, 1, 1),
    attenuationColor: new THREE.Color(1, 0, 0),
    attenuationDistance: 1,
    sheenRoughnessMap: ArmchairLeatheMetalDirty,
    metalness: 0.4,
    metalnessMap: ArmchairLeatheMetalDirty,
  });

  const trimMtl = new THREE.MeshPhysicalMaterial({
    color: new THREE.Color(0.5, 0.5, 0.5),
    normalMap: ArmchairLeatheVelvetNRM,
    normalMapType: THREE.TangentSpaceNormalMap,
    sheen: 0.6,
  });
  const { nodes, materials } = useGLTF("/gltf/Scene_06.glb");
  const objRef = useRef();
  useFrame(() => {
    objRef.current.rotation.y += 0.01;
  });

  return (
    <group
      name="Sofa_C_grp"
      position={[0, 0, 0]}
      rotation={[0, 1.571, 0]}
      scale={0.008}
      ref={objRef}
    >
      <mesh
        name="Sofa_C_Back"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Back.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Blanket"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Blanket.geometry}
        material={blanketMtl}
      />
      <mesh
        name="Sofa_C_Cushion_2"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Cushion_2.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Cushion_3"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Cushion_3.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Cushion_4"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Cushion_4.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Cushion_5"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Cushion_5.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Frame"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Frame.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Legs_1"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_1.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_2"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_2.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_3"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_3.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_4"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_4.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_5"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_5.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_6"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_6.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_7"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_7.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Legs_8"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Legs_8.geometry}
        material={materials.lambert1}
      />
      <mesh
        name="Sofa_C_Pillow_1"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Pillow_1.geometry}
        material={pillowMtl1}
      />
      <mesh
        name="Sofa_C_Pillow_2"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Pillow_2.geometry}
        material={pillowMtl2}
      />
      <mesh
        name="Sofa_C_Pillow_3"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Pillow_3.geometry}
        material={pillowMtl2}
      />
      <mesh
        name="Sofa_C_Pillow_4"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Pillow_4.geometry}
        material={pillowMtl1}
      />
      <mesh
        name="Sofa_C_Pillow_5"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Pillow_5.geometry}
        material={pillowMtl2}
      />
      <mesh
        name="Sofa_C_Side_1"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Side_1.geometry}
        material={sofaMtl}
      />
      <mesh
        name="Sofa_C_Side_2"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_C_Side_2.geometry}
        material={sofaMtl}
      />
      <group name="Sofa_C_Trim" position={[0, 343.018, -0.79]}>
        <mesh
          name="Sofa_C_TrimPIV"
          castShadow
          receiveShadow
          geometry={nodes.Sofa_C_TrimPIV.geometry}
          material={trimMtl}
          position={[0, -343.018, 0.79]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("gltf/Scene_06.glb");
