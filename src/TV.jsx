/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 C:\Users\osain\Coding\Projects\3js\Sohne\public\gltf\remainder\TV.glb -o C:\Users\osain\Coding\Projects\3js\Sohne\src\TV.jsx 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";


export function TV(props) {
  const { nodes, materials } = useGLTF('./gltf/TV.glb')
  const [tvHousing, tvScreen] = useTexture([
    "/textures/livingroom/Living_Room_3_Shaded__TV_Housing_TV_HousingShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_3_Shaded__TV_Screen_TV_ScreenShape_rmanDefaultBakeDisplay.png", 
  ]);


  tvHousing.flipY = false
  tvScreen.flipY = false
  const tvHousingMat = new THREE.MeshStandardMaterial({
    map: tvHousing,
    envMapIntensity: 0
  });
  const tvScreenMat = new THREE.MeshPhysicalMaterial({
    map: tvScreen,
    color: "gray",
   anisotropy: 5,
   iridescence: 8,
    envMapIntensity: .1,
    reflectivity: 1,
    clearcoat: 1
  });
  return (
    <group {...props} dispose={null}>
      <group position={[135.909, 66.536, -301.518]}>
        <mesh geometry={nodes.TV_ScreenPIV.geometry} material={tvScreenMat} position={[-135.909, -66.536, 301.518]} />
      </group>
      <group position={[135.89, 105.762, -301.518]}>
        <mesh geometry={nodes.TV_HousingPIV.geometry} material={tvHousingMat} position={[-135.89, -105.762, 301.518]} />
      </group>
    </group>
  )
}

useGLTF.preload('./gltf/TV.glb')
