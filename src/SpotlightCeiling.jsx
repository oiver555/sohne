/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 C:\Users\osain\Coding\Projects\3js\Sohne\public\gltf\remainder\SpotlightCeiling.glb -o C:\Users\osain\Coding\Projects\3js\Sohne\src\SpotlightCeiling.jsx 
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";

export function SpotlightCeiling(props) {
  const { nodes, materials } = useGLTF("./gltf/Spotlight_Ceiling.glb");
  const [lightBeam, wire, screws, housing, filament, bracket, base, inner] =
    useTexture([
      "/textures/livingroom/Living_Room_3_Shaded__Light_Beam_Light_BeamShape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Wire1_Spotlight_Wire1Shape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Screws_Spotlight_ScrewsShape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Housing_Spotlight_HousingShape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Filament_Spotlight_FilamentShape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Bracket_Spotlight_BracketShape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Base_Spotlight_BaseShape_rmanDefaultBakeDisplay.png",
      "/textures/livingroom/Living_Room_3_Shaded__Spotlight_Inner_Spotlight_InnerShape_rmanDefaultBakeDisplay.png",
    ]);

  lightBeam.flipY = false;
  wire.flipY = false;
  screws.flipY = false;
  housing.flipY = false;
 
  bracket.flipY = false;
  base.flipY = false;
  inner.flipY = false;

  const lightBeamMat = new THREE.MeshStandardMaterial({
    map: lightBeam,
    envMapIntensity: 0,
  });
  const wireMat = new THREE.MeshStandardMaterial({
    map: wire,
    envMapIntensity: 0,
  });
  const screwsMat = new THREE.MeshStandardMaterial({
    map: screws,
    envMapIntensity: 0,
  });
  const housingMat = new THREE.MeshStandardMaterial({
    map: housing,
    envMapIntensity: 0,
  });
  const filamentMat = new THREE.MeshStandardMaterial({
    emissive: "red",
    emissiveIntensity: 10,
    envMapIntensity: 1,
  });
  const bracketMat = new THREE.MeshStandardMaterial({
    map: bracket,
    envMapIntensity: 0,
  });
  const baseMat = new THREE.MeshStandardMaterial({
    map: base,
    envMapIntensity: 0,
  });
  const innerMat = new THREE.MeshPhysicalMaterial({
    reflectivity: 1,
    clearcoat: 1.0,
    metalness: 1,
    color: 'silver', 
    emissive: "silver",
    emissiveIntensity: .1,
    envMapIntensity: 1,
  });

  return ( 
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Spotlight_Housing.geometry} material={housingMat} />
      <mesh geometry={nodes.Spotlight_Bracket.geometry} material={bracketMat} />
      <mesh geometry={nodes.Spotlight_Base.geometry} material={baseMat} />
      <mesh geometry={nodes.Light_Beam.geometry} material={lightBeamMat} />
      <mesh geometry={nodes.Spotlight_Wire1.geometry} material={wireMat} />
      <mesh geometry={nodes.Spotlight_Inner.geometry} material={innerMat} />
      <mesh
        geometry={nodes.Spotlight_Filament.geometry}
        material={filamentMat}
      />
    </group>
  );
}

useGLTF.preload("./gltf/Spotlight_Ceiling.glb");
