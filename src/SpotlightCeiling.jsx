/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 C:\Users\osain\Coding\Projects\3js\Sohne\public\gltf\remainder\SpotlightCeiling.glb -o C:\Users\osain\Coding\Projects\3js\Sohne\src\SpotlightCeiling.jsx 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";

export function SpotlightCeiling(props) {
  const { nodes, materials } = useGLTF('./gltf/SpotlightCeiling.glb')
  const [lightBeam, wire, screws, housing, filament, bracket, base, inner] = useTexture([
    "/textures/livingroom/Living_Room_2_Shaded__Light_Beam_Light_BeamShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Wire1_Spotlight_Wire1Shape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Screws_Spotlight_ScrewsShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Housing_Spotlight_HousingShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Filament_Spotlight_FilamentShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Bracket_Spotlight_BracketShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Base_Spotlight_BaseShape_rmanDefaultBakeDisplay.png",
    "/textures/livingroom/Living_Room_2_Shaded__Spotlight_Inner_Spotlight_InnerShape_rmanDefaultBakeDisplay.png",
  ]);

  lightBeam.flipY = false;
  wire.flipY = false;
  screws.flipY = false;
  housing.flipY = false;
  filament.flipY = false;
  bracket.flipY = false;
  base.flipY = false;
  inner.flipY = false;

  const lightBeamMat = new THREE.MeshStandardMaterial({
    lightMap: lightBeam,
  });
  const wireMat = new THREE.MeshStandardMaterial({
    lightMap: wire,
  });
  const screwsMat = new THREE.MeshStandardMaterial({
    lightMap: screws,
  });
  const housingMat = new THREE.MeshStandardMaterial({
    lightMap: housing,
  });
  const filamentMat = new THREE.MeshStandardMaterial({
    lightMap: filament,
  });
  const bracketMat = new THREE.MeshStandardMaterial({
    lightMap: bracket,
  });
  const baseMat = new THREE.MeshStandardMaterial({
    lightMap: base,
  });
  const innerMat = new THREE.MeshStandardMaterial({
    lightMap: inner,
  });

  return (
    <group {...props} dispose={null}>
      <group position={[75.595, 272.778, -264.364]}>
        <mesh geometry={nodes.Light_BeamPIV.geometry} material={lightBeamMat} position={[-75.595, -272.778, 264.364]} />
      </group>
      <group position={[75.082, 264.125, -264.582]}>
        <mesh geometry={nodes.Spotlight_Wire1PIV.geometry} material={wireMat} position={[-75.082, -264.125, 264.582]} />
      </group>
      <group position={[79.815, 268.542, -264.171]}>
        <mesh geometry={nodes.Spotlight_ScrewsPIV.geometry} material={screwsMat} position={[-79.815, -268.542, 264.171]} />
      </group>
      <group position={[75.462, 254.819, -264.242]}>
        <mesh geometry={nodes.Spotlight_HousingPIV.geometry} material={housingMat} position={[-75.462, -254.819, 264.242]} />
      </group>
      <group position={[78.958, 249.564, -264.102]}>
        <mesh geometry={nodes.Spotlight_FilamentPIV.geometry} material={filamentMat} position={[-78.958, -249.564, 264.102]} />
      </group>
      <group position={[78.26, 259.326, -264.278]}>
        <mesh geometry={nodes.Spotlight_BracketPIV.geometry} material={bracketMat} position={[-78.26, -259.326, 264.278]} />
      </group>
      <group position={[75.542, 268.486, -264.29]}>
        <mesh geometry={nodes.Spotlight_BasePIV.geometry} material={baseMat} position={[-75.542, -268.486, 264.29]} />
      </group>
      <mesh geometry={nodes.Spotlight_Inner.geometry} material={innerMat} />
    </group>
  )
}

useGLTF.preload('./gltf/SpotlightCeiling.glb')
