/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Storage_D.gltf -o C:\Users\osain\Coding\Projects\3js\Sohne\src\Storage_D.jsx 
*/
import React, { useContext, useEffect, useMemo, useState, useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";
import { animated, useSpring } from "@react-spring/three";
import { useGesture } from "react-use-gesture";
import { GlobalStateContext, StorageContext } from "./ExpContext";
import {
  EffectComposer,
  Outline,
  Selection,
  Select,
} from "@react-three/postprocessing";
import { KernelSize } from "postprocessing";

export default function Storage_D(props) {
  const { nodes, materials } = useGLTF("./gltf/Storage_D.gltf");

  const { storageDRef, storageRotation } = useContext(StorageContext);
  const { currStorage, setobjConfig, currBaseTexture } =
    useContext(GlobalStateContext);
  const [
    mahoganyDoor1,
    mahoganyDoor2,
    mahoganyDrawer,
    mahoganyFrame,
    mahoganyRoughDoor1,
    mahoganyRoughDoor2,
    mahoganyRoughDrawer,
    mahoganyRoughFrame,
    oakDoor1,
    oakDoor2,
    oakDrawer,
    oakFrame,
    oakRoughDoor1,
    oakRoughDoor2,
    oakRoughDrawer,
    oakRoughFrame,
    walnutDoor1,
    walnutDoor2,
    walnutDrawer,
    walnutFrame,
    walnutRoughDoor1,
    walnutRoughDoor2,
    walnutRoughDrawer,
    walnutRoughFrame,
  ] = useTexture([
    "/textures/Storage_D_mahagony_door_1.png",
    "/textures/Storage_D_mahagony_door_2.png",
    "/textures/Storage_D_mahagony_drawer.png",
    "/textures/Storage_D_mahagony_frame.png",
    "/textures/Storage_D_mahogany_rough_door_1.png",
    "/textures/Storage_D_mahogany_rough_door_2.png",
    "/textures/Storage_D_mahogany_rough_drawer.png",
    "/textures/Storage_D_mahogany_rough_frame.png",
    "/textures/Storage_D_oak_door_1.png",
    "/textures/Storage_D_oak_door_2.png",
    "/textures/Storage_D_oak_drawer.png",
    "/textures/Storage_D_oak_frame.png",
    "/textures/Storage_D_oak_rough_door_1.png",
    "/textures/Storage_D_oak_rough_door_2.png",
    "/textures/Storage_D_oak_rough_drawer.png",
    "/textures/Storage_D_oak_rough_frame.png",
    "/textures/Storage_D_walnut_door_1.png",
    "/textures/Storage_D_walnut_door_2.png",
    "/textures/Storage_D_walnut_drawer.png",
    "/textures/Storage_D_walnut_frame.png",
    "/textures/Storage_D_walnut_rough_door_1.png",
    "/textures/Storage_D_walnut_rough_door_2.png",
    "/textures/Storage_D_walnut_rough_drawer.png",
    "/textures/Storage_D_walnut_rough_frame.png",
  ]);

  mahoganyDoor1.flipY = false;
  mahoganyDoor2.flipY = false;
  mahoganyDrawer.flipY = false;
  mahoganyFrame.flipY = false; 
  mahoganyRoughDoor1.flipY = false;
  mahoganyRoughDoor2.flipY = false;
  mahoganyRoughDrawer.flipY = false;
  mahoganyRoughFrame.flipY = false;
  oakDoor1.flipY = false;
  oakDoor2.flipY = false;
  oakDrawer.flipY = false;
  oakFrame.flipY = false;
  oakRoughDoor1.flipY = false;
  oakRoughDoor2.flipY = false;
  oakRoughDrawer.flipY = false;
  oakRoughFrame.flipY = false;
  walnutDoor1.flipY = false;
  walnutDoor2.flipY = false;
  walnutDrawer.flipY = false;
  walnutFrame.flipY = false;
  walnutRoughDoor1.flipY = false;
  walnutRoughDoor2.flipY = false;
  walnutRoughDrawer.flipY = false;
  walnutRoughFrame.flipY = false;

  const frameMtl = new THREE.MeshStandardMaterial({
    map: mahoganyFrame,
    roughnessMap: mahoganyRoughFrame,
    roughness: 0.5,
    envMapIntensity: 0.2,
  });
  const drawerMtl = new THREE.MeshStandardMaterial({
    map: mahoganyDrawer,
    roughnessMap: mahoganyRoughDrawer,
    roughness: 0.2,
    envMapIntensity: 0.2,
  });
  const door1Mat = new THREE.MeshStandardMaterial({
    map: mahoganyDoor1,
    roughnessMap: mahoganyRoughDoor1,
    roughness: 0.2,
    envMapIntensity: 0.2,
  });
  const doorMat2 = new THREE.MeshStandardMaterial({
    map: mahoganyDoor2,
    roughnessMap: mahoganyRoughDoor2,
    roughness: 0.2,
    envMapIntensity: 0.2,
  }); 
  const goldMat = new THREE.MeshPhysicalMaterial({
    color: "#ffd700", // Gold color
    envMapIntensity: 2,
    metalness: 1 ,
    clearcoat: 1,
    clearcoatRoughness: 1,
    reflectivity: 1, 
    roughness: .2, // Adjust the roughness for a realistic appearance
  });
  const chromeMat = new THREE.MeshPhysicalMaterial({ 
    color: "silver", // Gold color
    envMapIntensity: 2,
    metalness: 1 ,
    clearcoat: 1,
    clearcoatRoughness: 1,
    reflectivity: 1, 
    roughness: .3, 
  }); 
  const [hovered, setHovered] = useState(false);
  const [spring, set] = useSpring(() => ({
    rotation: [0, 0, 0],
    config: { friction: 10 },
  }));
  const bind = useGesture({
    onDrag: ({ offset: [x] }) => "",
  });

  useEffect(() => {
    if (currStorage === "d") {
      setobjConfig({
        baseTextures: [
          "/textures/Storage_D_mahagony_frame.png",
          "/textures/Storage_D_oak_rough_frame.png",
          "/textures/Storage_D_walnut_rough_frame.png",
        ],
        cushionTextures: [],
      });
    }
  }, [currStorage]);

  return (
    <animated.group
      ref={storageDRef}
      position={[19.8, 0, 14]}
      {...spring}
      {...bind()}
      scale={7}
      rotation-y={storageRotation.rotate}
      dispose={null}
    >
      <group rotation={[0, 1.6, 0]}>
        <mesh geometry={nodes.Drawer_1.geometry} material={drawerMtl} />
        <mesh geometry={nodes.Drawer_4.geometry} material={drawerMtl} />
        <mesh geometry={nodes.Door_2.geometry} material={doorMat2} />
        <mesh
          geometry={nodes.Door_handle_4.geometry}
          material={chromeMat}
        />
        <mesh
          geometry={nodes.Door_handle_1.geometry}
          material={chromeMat}
        />
        <mesh
          geometry={nodes.Door_handle_5.geometry}
          material={chromeMat}
        />
        <mesh
          geometry={nodes.Door_handle_6.geometry}
          material={chromeMat}
        />
        <mesh geometry={nodes.Drawer_2.geometry} material={drawerMtl} />
        <mesh geometry={nodes.Frame.geometry} material={frameMtl} />
        <mesh geometry={nodes.Door_1.geometry} material={door1Mat} />
        <mesh
          geometry={nodes.Door_handle_2.geometry}
          material={chromeMat}
        />
        <mesh
          geometry={nodes.Door_handle_3.geometry}
          material={chromeMat}
        />
        <mesh geometry={nodes.Drawer_3.geometry} material={drawerMtl} />
      </group>
    </animated.group>
  );
}
