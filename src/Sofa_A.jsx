/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { useFrame } from "@react-three/fiber";

export default function Sofa_A(props) {
  const { nodes } = useGLTF("./gltf/Sofa_A.glb");
  const objRef = useRef();
  const textureLoader = new THREE.TextureLoader();
   
  const ArmchairLeatheFabricbump = textureLoader.load(
    "/textures/Armchair_Leathe_Fabric_bump.jpg"
  ); 
  const ArmchairLeatheLeatherBump = textureLoader.load(
    "/textures/Armchair_Leathe_Leather_Bump.png"
  );
  const ArmchairLeatheLeatherDiffuse = textureLoader.load(
    "/textures/Armchair_Leathe_Leather_Diffuse.jpg"
  );
  const ArmchairLeatheLeatherNRM = textureLoader.load(
    "/textures/Armchair_Leathe_Leather_NRM.png"
  ); 
  const plaidTexture1 = textureLoader.load("./textures/plaid_Texture_1.jpg");
  plaidTexture1.flipY = false;
  plaidTexture1.colorSpace = THREE.SRGBColorSpace
  plaidTexture1.wrapS = THREE.RepeatWrapping;
  plaidTexture1.wrapT = THREE.RepeatWrapping;
  plaidTexture1.repeat.set(15, 15);
  const ArmchairLeathePillow01Fabric = textureLoader.load(
    "/textures/Armchair_Leathe_Pillow_01_Fabric.jpg"
  ); 
  const ArmchairLeathePlaidFabricDiffuse = textureLoader.load(
    "/textures/Armchair_Leathe_Plaid_Fabric_Diffuse.jpg"
  );  

  const plaidMtl = new THREE.MeshStandardMaterial({
    map: plaidTexture1,
    envMapIntensity:.5
  });
  const pillow1Mtl = new THREE.MeshStandardMaterial({
    map: ArmchairLeathePillow01Fabric,
    bumpMap: ArmchairLeatheFabricbump,
    envMapIntensity:.2
  });
  const legMtl = new THREE.MeshStandardMaterial({
    color: new THREE.Color(0.2, 0.2, 0.2),
    metalness: 1,
  });
  const blanketMtl = new THREE.MeshStandardMaterial({
    map: ArmchairLeathePlaidFabricDiffuse,
    envMapIntensity:.2
  });

  useFrame(() => {
    // objRef.current.rotation.y -= 0.001;
  });
  return (
    <group
      name="Sofa_A_grp"
      position={[19.8, 0, 14]}
      rotation={[-Math.PI, 1.2, -Math.PI]}
      scale={0.104}
      ref={objRef}
    >
      <mesh
        name="Sofa_A_Blanket"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_A_Blanket.geometry}
        material={blanketMtl}
        position={[4.766, 24.801, 54.442]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        name="Sofa_A_Cushion_1"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_A_Cushion_1.geometry}
        material={plaidMtl}
        position={[-0.371, 57.428, -66.769]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        name="Sofa_A_Cushion_2"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_A_Cushion_2.geometry}
        material={plaidMtl}
        position={[-0.371, 57.428, -66.769]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        name="Sofa_A_Cushion_3"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_A_Cushion_3.geometry}
        material={plaidMtl}
        position={[1.424, 29.5, 49.034]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <group name="Sofa_A_Cushion_4" position={[-0.365, 57.384, -66.35]}>
        <mesh
          name="Sofa_A_Cushion_4PIV"
          castShadow
          receiveShadow
          geometry={nodes.Sofa_A_Cushion_4PIV.geometry}
          material={plaidMtl}
          position={[0.365, -57.384, 66.35]}
        />
      </group>
      <group name="Sofa_A_Legs_1" position={[0.545, 8.614, -2.003]}>
        <mesh
          name="Sofa_A_Legs_1PIV"
          castShadow
          receiveShadow
          geometry={nodes.Sofa_A_Legs_1PIV.geometry}
          material={legMtl}
          position={[-0.545, -8.614, 2.003]}
        />
      </group>
      <mesh
        name="Sofa_A_Legs_2"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_A_Legs_2.geometry}
        material={plaidMtl}
        position={[1.424, 29.5, 49.034]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <group name="Sofa_A_Pillow" position={[6.914, 52.918, -24.743]}>
        <mesh
          name="Sofa_A_PillowPIV"
          castShadow
          receiveShadow
          geometry={nodes.Sofa_A_PillowPIV.geometry}
          material={pillow1Mtl}
          position={[-6.914, -52.918, 24.743]}
        />
      </group>
      <mesh
        name="Sofa_A_Seat"
        castShadow
        receiveShadow
        geometry={nodes.Sofa_A_Seat.geometry}
        material={plaidMtl}
        position={[-0.371, 57.428, -66.769]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <group name="Sofa_A_Trim" position={[0.414, 46.792, -1.826]}>
        <group name="Sofa_A_TrimPIV" position={[-0.414, -46.792, 1.826]}>
          <mesh
            name="Sofa_A_TrimShape"
            castShadow
            receiveShadow
            geometry={nodes.Sofa_A_TrimShape.geometry}
            material={plaidMtl}
          />
          <mesh
            name="Sofa_A_TrimShape_1"
            castShadow
            receiveShadow
            geometry={nodes.Sofa_A_TrimShape_1.geometry}
            material={plaidMtl}
          />
        </group>
      </group>
      <group name="Sofa_A_Wood" position={[0.559, 16.464, -1.955]}>
        <group name="Sofa_A_WoodPIV" position={[-0.559, -16.464, 1.955]}>
          <mesh
            name="Sofa_A_WoodShape"
            castShadow
            receiveShadow
            geometry={nodes.Sofa_A_WoodShape.geometry}
            material={plaidMtl}
          />
          <mesh
            name="Sofa_A_WoodShape_1"
            castShadow
            receiveShadow
            geometry={nodes.Sofa_A_WoodShape_1.geometry}
            material={plaidMtl}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./gltf/Sofa_A.glb");
